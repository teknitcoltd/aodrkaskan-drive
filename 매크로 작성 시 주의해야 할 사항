매크로 작성 시 주의해야 할 사항
1.엑셀의 기본기능 및 기존 함수(built-in function)기능을 익힐 것.
ABC를 모르고 좋은 영어를 할 수 없다.
엑셀에서 제공하는 기능으로 작업이 가능하면 속도로 보나 에러발생율 면에서도 그것이 항상 최선이다.
매크로는 차선책이며 엑셀 기본기능으로 불가능 한 것에만 사용한다.
2.F1 키를 누르는 습관을 갖자. 세상에서 가장 좋은 VBA 매뉴얼은 도움말이다.
많은 예제와 간결하며 정확한 용어정의(definition)가 모두 거기에 있다.
3.댜양한 코드를 자신이 직접 VBE(Visual Basic Editor)창에서 쳐 볼것.
눈으로 보는 것과 직접 해보면 차이가 무지 크다. 수학문제풀이와 비슷핟.
4.VBE의 다양한 Debugging 기능을 모두 익힐것. :
차를 운전하기전 차에 대한 자세한 기능을 이해하고 있는 것이 무엇보다 중요함.
생각보다 정말 많은 지원도구와 기능이 있음.
지금도 가끔 새로운 기능을 찾곤 한다.
다른 사람들의 매크로를 VBE창에서 F8 키를 이용하여 한 줄씩 확인해 볼것.
생각보다 많은 것을 배우게 된다.
5.Select 하지 말것 : ?자동 매크로 기록을 하면 많은 range를 select한다.
간단한 매크로는 별 상관이 없지만 많은 데이터와 작업하려면 속도저하의 가장 주범인 select를 절대 사용하 지 말것.
대신 With 구문이나 Specialcells, CurrentRegion, UsedRange, Intersect, Rows collection 등
VBA에서 제공하는 다양한 영역선택 기능들을 사용할것.
6.With 구문을 많이 사용하라. 초보와 고수의 코딩 구분은 아주 간단하다.
셀 Select를 많이 사용하면 하수, With 구문을 많이 사용하면 고수.
7.Hard Coding 하지 말것 :
Procedure 내에 Cells(3,5), strValue = 12, Rows(3) 등과 같이 확정적인 숫자의 사용을 피할것.
행삽입 삭제나 셀조작 시 에러발생율이 올라간다.
8.원하는 영역을 찾는 기능 및 종단셀을 찾는 Cells(Rows.Count, 1).End(3).(2) 와 같은 구문들을 철저히 공부할 것.
작업을 원하는 셀들을 신속하고 정확히 찾지 못하면 매크로는 의미가 없다.
9.Range object(예를들면, range("A1:B3"))의 사용도 중요하지만 Cells property(예를들면 cells(3, 5))의 사용법 을 익혀둘것.
반복구문(For, Do Loop)과 Cells property의 병합사용은 필수이다.
10.많은 행삽입 삭제의 기능을 구현 시 1행에서 마지막 행이 아닌 마지막 행에서 1번 행으로 올라가며 작업.
11.한 가지 방법으로만 매크로를 만들지 말고 다른 method나 properties들을 사용하여 동일한 매크로를 만드 는 연습을 해볼것.
12.매크로 기록중에 다른 작업을 하지 말것. 예상치 못한 오류의 발생을 초래할 수 있음.
13.배열을 적극 활용할 것. 대용량 데이터나 속도를 요구할 경우 배열만큼 좋은 코드가 없음.
14.Cells(r, 1).EntireRow.Delete shift:=xlUp 과 같이 많은 메모리와 시간을 잡아먹는 코드들을 피할것.
그런 경우 Cells(r, 1).ClearContents 등과 같이 데이터만 삭제하고 전체를 sort(정렬)
15.Union(rangeA, rangeB)을 사용해 반복하며 영역을 추가한 뒤
전체영역을 선택하는 코드는 데이터가 몇 천행을 넘어갈 경우 가능한 사용을 피할것.
데이터가 늘어나면 엄청나게 속도가 저하되므로 데이터가 많을 경우 For 구문을 중첩하여 구간별로 나누어 작 업하여야 한다.
16.Range("A1:B5").Copy Cells(1, 1)과 같이 복사하기 보다는
Cells(1, 1).Reszie(5, 2) = range("A1:B5").Value 와 같이 등호(=)를 이용하여 데이터 복사.
Copy는 데이터와 함께 양식까지 함께 복사되어 좋지만 속도가 저하됨. 양식복사가 필요한 곳만 copy로 옮기 고,
데이터는 등호(=)를 이용하여 이동.
